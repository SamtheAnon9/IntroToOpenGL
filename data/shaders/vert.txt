#version 410

layout(location=0) in vec4 Position;
layout(location=1) in vec4 Colour;
layout(location=2) in vec4 Normal;
layout(location=3) in vec4 Tangent;
layout(location=4) in vec2 TexCoord;

out vec3 vPosition;
out vec3 vColour;
out vec3 vNormal;
out vec3 vTangent;
out vec3 vBiTangent;
out vec3 vShadowCoord;
out vec2 vTexCoord;

uniform mat4 ProjectionView;
uniform mat4 LightMatrix;
uniform mat4 Global;
uniform mat4 TransposeInverseGlobal;

void main() {
	vColour = Colour.xyz;
	vNormal = (TransposeInverseGlobal * Normal).xyz;
	vPosition = (Global * Position).xyz;
	vTangent = Tangent.xyz;
	vBiTangent = cross(vNormal, vTangent);
	vTexCoord = TexCoord;
	vShadowCoord = (LightMatrix * vec4(vPosition, 1)).xyz;
	gl_Position = ProjectionView * vec4(vPosition, 1);
};