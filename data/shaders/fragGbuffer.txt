#version 410

in vec3 vPosition;
in vec3 vNormal;
in vec3 vTangent;
in vec3 vBiTangent;
in vec2 vUV;

uniform sampler2D Diffuse;
uniform sampler2D Ambient;
uniform sampler2D Specular;
uniform sampler2D Normal;

layout(location = 0) out vec3 gpassDiffuse;
layout(location = 1) out vec3 gpassAmbient;
layout(location = 2) out vec3 gpassSpecular;
layout(location = 3) out vec3 gpassPosition;
layout(location = 4) out vec3 gpassNormal;

void main() 
{
	gpassDiffuse = texture(Diffuse, vUV).xyz;
	gpassAmbient = texture(Ambient, vUV).xyz;
	gpassSpecular = texture(Specular, vUV).xyz;

	gpassPosition = vPosition;

	mat3 TBN = mat3(normalize(vTangent), normalize(vBiTangent), normalize(vNormal));
	vec3 N = texture(Normal, vUV).xyz * 2 - 1;
	gpassNormal = TBN * N;
}