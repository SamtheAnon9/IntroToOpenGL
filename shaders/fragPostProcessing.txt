#version 410

in vec2 vUV;

out vec4 fFragColour;

uniform sampler2D target;

vec4 Simple()
{
	return texture(target, vUV);
}

vec4 BoxBlur() 
{
	vec2 texel = 1.0f / textureSize(target, 0).xy;
	
	vec4 colour = texture(target, vUV);
	colour += texture(target, vUV + vec2(-texel.x, texel.y));
	colour += texture(target, vUV + vec2(-texel.x, 0));
	colour += texture(target, vUV + vec2(-texel.x, -texel.y));
	colour += texture(target, vUV + vec2(0, texel.y));
	colour += texture(target, vUV + vec2(0, -texel.y));
	colour += texture(target, vUV + vec2(texel.x, texel.y));s
	colour += texture(target, vUV + vec2(texel.x, 0));
	colour += texture(target, vUV + vec2(texel.x, -texel.y));

	return colour / 9;
}

vec4 Distort()
{
	vec2 mid = vec2(0.5f);
	
	float distanceFromCentre = distance(vUV, mid);
	vec2 normalizedCoord = normalize(vUV - mid);
	float bias = distanceFromCentre + sin(distanceFromCentre * 15) * 0.02f;
	
	vec2 newCoord = mid + bias * normalizedCoord;
	if (newCoord.x > 0.99f)
		newCoord.x = 0.99f;
	if (newCoord.x < 0.01f)
		newCoord.x = 0.01f;
	if (newCoord.y > 0.99f)
		newCoord.y = 0.99f;
	if (newCoord.y < 0.01f)
		newCoord.y = 0.01f;
		
	return texture(target, newCoord);
}

void main()
{
	fFragColour = Distort();
}